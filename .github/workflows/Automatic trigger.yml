name: SukiSUUltra更新时自动触发构建

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:
    inputs:
      target_branch_override:
        description: "覆盖 'A编译内核' 的目标分支 (例如 main, dev)。留空则使用默认 'main'。"
        required: false
        type: string
      force_trigger:
        description: "是否强制触发构建，即使SukiSU版本未更新 (true/false，默认为false即检查版本)"
        required: false
        type: boolean
        default: false # 默认情况下，手动触发也会检查版本

jobs:
  check_sukisu_update_and_trigger:
    name: Check SukiSU Update and Trigger Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.WORKFLOW_TRIGGER_PAT }}

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Action SukiSU Checker"
          git config --global user.email "actions@github.com"

      - name: Get Current SukiSU Version
        id: get_current_version
        run: |
          echo "正在从 ShirkNeko/SukiSU-Ultra 仓库的 'main' 分支获取当前 SukiSU 版本..."
          rm -rf sukisu_temp_clone
          git clone https://github.com/ShirkNeko/SukiSU-Ultra.git sukisu_temp_clone --branch main --single-branch
          cd sukisu_temp_clone
          COMMIT_COUNT=$(git rev-list --count HEAD)
          CURRENT_VERSION=$((COMMIT_COUNT + 10606))
          cd ..
          rm -rf sukisu_temp_clone
          echo "计算得到的当前 SukiSU 版本: $CURRENT_VERSION"
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Check for Update and Trigger Kernel Build
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TRIGGER_PAT }}
        run: |
          set -euo pipefail
          
          CURRENT_VERSION="${{ steps.get_current_version.outputs.version }}"
          VERSION_FILE=".sukisu_last_known_version"
          LAST_KNOWN_VERSION="0"

          if [ -f "$VERSION_FILE" ]; then
            LAST_KNOWN_VERSION=$(cat "$VERSION_FILE")
          else
            echo "版本文件 '$VERSION_FILE' 未找到。假定为首次运行或版本为 0。"
          fi

          echo "上次已知的 SukiSU 版本: $LAST_KNOWN_VERSION"
          echo "当前获取的 SukiSU 版本: $CURRENT_VERSION"

          # 判断版本是否实际更新
          ACTUALLY_UPDATED=false
          if [ "$CURRENT_VERSION" -gt "$LAST_KNOWN_VERSION" ]; then
            ACTUALLY_UPDATED=true
          fi

          # 决定是否应该触发下游构建
          SHOULD_TRIGGER_DOWNSTREAM_BUILD=false
          TRIGGER_REASON=""

          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # 手动触发逻辑
            if [[ "${{ github.event.inputs.force_trigger }}" == "true" ]]; then
              SHOULD_TRIGGER_DOWNSTREAM_BUILD=true
              TRIGGER_REASON="手动强制触发"
              echo "$TRIGGER_REASON: 将触发内核编译（忽略版本检查）。"
            elif $ACTUALLY_UPDATED; then
              SHOULD_TRIGGER_DOWNSTREAM_BUILD=true
              TRIGGER_REASON="手动触发，版本已更新"
              echo "$TRIGGER_REASON: SukiSU 版本已从 $LAST_KNOWN_VERSION 更新到 $CURRENT_VERSION。将触发内核编译。"
            else
              # 手动触发，但版本未更新且未强制 -> 自动取消触发下游
              echo "手动触发：SukiSU 版本 ($CURRENT_VERSION) 未更新 (上次已知版本: $LAST_KNOWN_VERSION)。此次不触发内核编译 (自动取消)。"
            fi
          else # 定时任务触发逻辑
            if $ACTUALLY_UPDATED; then
              SHOULD_TRIGGER_DOWNSTREAM_BUILD=true
              TRIGGER_REASON="定时任务检测到版本更新"
              echo "$TRIGGER_REASON: SukiSU 版本已从 $LAST_KNOWN_VERSION 更新到 $CURRENT_VERSION。将触发内核编译。"
            else
              echo "定时任务：SukiSU 版本 ($CURRENT_VERSION) 未更新 (上次已知版本: $LAST_KNOWN_VERSION)。此次不触发内核编译。"
            fi
          fi

          if $SHOULD_TRIGGER_DOWNSTREAM_BUILD; then
            echo "准备根据 '$TRIGGER_REASON' 触发 'A编译内核' 工作流..."
            
            TARGET_REF="refs/heads/main" # 默认目标分支
            if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.target_branch_override }}" ]]; then
              TARGET_REF="refs/heads/${{ github.event.inputs.target_branch_override }}"
              echo "使用手动指定的目标分支: ${TARGET_REF}"
            else
              echo "使用默认目标分支: ${TARGET_REF}"
            fi
            
            if gh workflow run "A编译内核" --ref "${TARGET_REF}"; then
              echo "已成功发送触发命令给 'A编译内核' 工作流 (在分支 ${TARGET_REF} 上)。"
              
              # 只有当版本确实发生了更新时，才更新版本记录文件
              if $ACTUALLY_UPDATED; then
                echo "版本确实已更新。正在更新版本记录文件 '$VERSION_FILE' 为: $CURRENT_VERSION"
                echo "$CURRENT_VERSION" > "$VERSION_FILE"
                git add "$VERSION_FILE"
                if git diff --staged --quiet; then
                  echo "版本文件 '$VERSION_FILE' 内容未改变（可能已被其他进程更新），无需提交。"
                else
                  git commit -m "CI: Update SukiSU last known version to $CURRENT_VERSION [skip ci]"
                  # 推送逻辑 (包含重试)
                  for i in 1 2 3; do
                    if git push origin HEAD:${{ github.ref_name }}; then
                      echo "成功推送更新后的版本文件。"
                      break
    